----------------------------------
1.下载地址：https://github.com/MSOpenTech/redis/releases。

2.下载Redis-x64-xxx.zip压缩包到C盘解压后，将文件夹重新命名为 redis。 

3.打开一个cmd窗口使用cd命令切换目录到 C:\redis运行redis-server.exe redis.windows.conf 
	（出现一个正方体形状的即为成功）
	（如果想方便的话，可以把 redis 的路径加到系统的环境变量里，这样就省得再输路径了，
	（后面的那个 redis.windows.conf 可以省略，如果省略，会启用默认的）
4.另启一个cmd窗口，原来的不要关闭，不然就无法访问服务端了。
	-- 切换到redis目录下运行 redis-cli.exe -h 127.0.0.1 -p 6379 。
	--设置键值对 set myKey abc
	--取出键值对 get myKey 
-----------------------------------
redis配置：
	-----------
	C:\Users\cjh>redis-cli.exe -h 127.0.0.1 -p 6379
		/usr/local/soft/redis/redis-cli -h $src_ip -p $src_port -a $pwd  <<END
		select 165
		flushdb
		END
	-----------
	127.0.0.1:6379> set mykey abc
	OK
	127.0.0.1:6379> get mykey
	"abc"
	-----------
	127.0.0.1:6379> config set loglevel "notice"
	127.0.0.1:6379> config get loglevel
	1) "loglevel"
	2) "notice"
redis conf的所有配置如下：
	127.0.0.1:6379> config get *
  1) "dbfilename"-----------------------------指定本地数据库文件名,默认值为dump.rdb
  2) "dump.rdb"
121) "dir"------------------------------------指定本地数据库存放目录 (dir ./)
122) "C:\\Users\\cjh"
  3) "requirepass"-------设置Redis连接密码，如果配置了连接密码，客户端在连接Redis时需要通过AUTH <password>命令提供密码，		---------默认关闭     requirepass foobared
  4) ""
  5) "masterauth"--------当master服务设置了密码保护时，slav服务连接master的密码(masterauth <master-password>)
  6) ""
  7) "unixsocket"
  8) ""
113) "loglevel"----指定日志记录级别，Redis总共支持四个级别：debug、verbose、notice、warning，默认为verbose
114) "notice"
  9) "logfile"-----日志记录方式，默认为标准输出，如果配置Redis为守护进程方式运行，而这里又配置为日志记录方式为标准输出，		   	   则日志将会发送给/dev/null
 10) "stdout"
 93) "daemonize"----------- Redis默认不是以守护进程的方式运行，可以通过该配置项修改，使用yes启用守护进程
 94) "no"
 11) "pidfile"-------------当Redis以守护进程方式运行时，Redis默认会把pid写入/var/run/redis.pid文件，可以通过pidfile指定
 12) "/var/run/redis.pid"
 13) "maxmemory"----------- 指定Redis最大内存限制，Redis在启动时会把数据加载到内存中，达到最大内存后，Redis会先尝试清除已			到期或即将到期的Key，当此方法处理 后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行			读取操作。Redis新的vm机制，会把Key存放内存，Value会存放在swap区（maxmemory <bytes>）
 14) "0"
 15) "maxmemory-samples"
 16) "5"
 17) "timeout"-----------------------------------客户端闲置多长时间后关闭连接，如果指定为0，表示关闭该功能
 18) "300"
 19) "auto-aof-rewrite-percentage"
 20) "100"
 21) "auto-aof-rewrite-min-size"
 22) "67108864"
 23) "hash-max-ziplist-entries"
 24) "512"
 25) "hash-max-ziplist-value"
 26) "64"
 27) "list-max-ziplist-size"
 28) "-2"
 29) "list-compress-depth"
 30) "0"
 31) "set-max-intset-entries"
 32) "512"
 33) "zset-max-ziplist-entries"
 34) "128"
 35) "zset-max-ziplist-value"
 36) "64"
 37) "hll-sparse-max-bytes"
 38) "3000"
 39) "lua-time-limit"
 40) "5000"
 41) "slowlog-log-slower-than"
 42) "10000"
 43) "latency-monitor-threshold"
 44) "0"
 45) "slowlog-max-len"
 46) "128"
 47) "port"----指定Redis监听端口，默认端口为6379,因为6379在手机按键上MERZ对应的号码MERZ取自意大利歌女Alessia Merz的名字
 48) "6379"
 49) "tcp-backlog"
 50) "511"
 51) "databases"----设置数据库的数量,默认数据库为0，可以使用SELECT <dbid>命令在连接上指定数据库id
 52) "16"
 53) "repl-ping-slave-period"
 54) "10"
 55) "repl-timeout"
 56) "60"
 57) "repl-backlog-size"
 58) "1048576"
 59) "repl-backlog-ttl"
 60) "3600"
 61) "maxclients"------设置同一时间最大客户端连接数，默认无限制，Redis可以同时打开的客户端连接数为Redis进程可以打开的最大			文件描述符数，如果设置 maxclients 0，表示不作限制。当客户端连接数到达限制时，Redis会关闭新的连接			并向客户端返回max number of clients reached错误信息
 62) "10000"
 63) "watchdog-period"
 64) "0"
 65) "slave-priority"
 66) "100"
 67) "min-slaves-to-write"
 68) "0"
 69) "min-slaves-max-lag"
 70) "10"
 71) "hz"
 72) "10"
 73) "cluster-node-timeout"
 74) "15000"
 75) "cluster-migration-barrier"
 76) "1"
 77) "cluster-slave-validity-factor"
 78) "10"
 79) "repl-diskless-sync-delay"
 80) "5"
 81) "tcp-keepalive"
 82) "0"
 83) "cluster-require-full-coverage"
 84) "yes"
 85) "no-appendfsync-on-rewrite"
 86) "no"
 87) "slave-serve-stale-data"
 88) "yes"
 89) "slave-read-only"
 90) "yes"
 91) "stop-writes-on-bgsave-error"
 92) "yes"
 95) "rdbcompression"------ 指定存储至本地数据库时是否压缩数据，默认为yes，Redis采用LZF压缩，
		------------如果为了节省CPU时间，可以关闭该选项，但会导致数据库文件变的巨大
 96) "yes"
 97) "rdbchecksum"
 98) "yes"
 99) "activerehashing"
100) "yes"
101) "protected-mode"
102) "yes"
103) "repl-disable-tcp-nodelay"
104) "no"
105) "repl-diskless-sync"
106) "no"
107) "aof-rewrite-incremental-fsync"
108) "yes"
109) "aof-load-truncated"
110) "yes"
111) "maxmemory-policy"
112) "noeviction"
115) "supervised"
116) "no"
117) "appendfsync"
118) "everysec"
119) "appendonly"----指定是否在每次更新操作后进行日志记录，Redis在默认情况下是异步的把数据写入磁盘，
		如果不开启，可能会在断电时导致一段时间内的数据丢失。因为 redis本身同步数据文件是按上面save条件来同步的
		所以有的数据会在一段时间内只存在于内存中。默认为no
120) "no"
123) "save"------------ 指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合
	save <seconds> <changes>
   	Redis默认配置文件中提供了三个条件：
    	save 900 1
    	save 300 10
    	save 60 10000
    	分别表示900秒（15分钟）内有1个更改，300秒（5分钟）内有10个更改以及60秒内有10000个更改。
124) "jd 3600 jd 300 jd 60"
125) "client-output-buffer-limit"
126) "normal 0 0 0 slave 268435456 67108864 60 pubsub 33554432 8388608 60"
127) "unixsocketperm"
128) "0"
129) "slaveof"------设置当本机为slav服务时,设置master服务的IP地址及端口，在Redis启动时，它会自动从master进行数据同步
130) ""(slaveof <masterip> <masterport>)
131) "notify-keyspace-events"
132) ""
133) "bind"--------------------------------------------绑定的主机地址
134) "127.0.0.1"
---------------------------------------------
20. 指定更新日志条件，共有3个可选值：
    no：表示等操作系统进行数据缓存同步到磁盘（快）
    always：表示每次更新操作后手动调用fsync()将数据写到磁盘（慢，安全）
    everysec：表示每秒同步一次（折衷，默认值）
    appendfsync everysec
21. 指定是否启用虚拟内存机制，默认值为no，简单的介绍一下，VM机制将数据分页存放，由Redis将访问量较少的页即冷数据swap到磁盘上，访问多的页面由磁盘自动换出到内存中（在后面的文章我会仔细分析Redis的VM机制）
     vm-enabled no
22. 虚拟内存文件路径，默认值为/tmp/redis.swap，不可多个Redis实例共享
     vm-swap-file /tmp/redis.swap
23. 将所有大于vm-max-memory的数据存入虚拟内存,无论vm-max-memory设置多小,所有索引数据都是内存存储的(Redis的索引数据 就是keys),也就是说,当vm-max-memory设置为0的时候,其实是所有value都存在于磁盘。默认值为0
     vm-max-memory 0
24. Redis swap文件分成了很多的page，一个对象可以保存在多个page上面，但一个page上不能被多个对象共享，vm-page-size是要根据存储的 数据大小来设定的，作者建议如果存储很多小对象，page大小最好设置为32或者64bytes；如果存储很大大对象，则可以使用更大的page，如果不 确定，就使用默认值
     vm-page-size 32
25. 设置swap文件中的page数量，由于页表（一种表示页面空闲或使用的bitmap）是在放在内存中的，，在磁盘上每8个pages将消耗1byte的内存。
     vm-pages 134217728
26. 设置访问swap文件的线程数,最好不要超过机器的核数,如果设置为0,那么所有对swap文件的操作都是串行的，可能会造成比较长时间的延迟。默认值为4
     vm-max-threads 4
27. 设置在向客户端应答时，是否把较小的包合并为一个包发送，默认为开启
    glueoutputbuf yes
28. 指定在超过一定的数量或者最大的元素超过某一临界值时，采用一种特殊的哈希算法
    hash-max-zipmap-entries 64
    hash-max-zipmap-value 512
29. 指定是否激活重置哈希，默认为开启（后面在介绍Redis的哈希算法时具体介绍）
    activerehashing yes
30. 指定包含其它的配置文件，可以在同一主机上多个Redis实例之间使用同一份配置文件，而同时各个实例又拥有自己的特定配置文件
    include /path/to/local.conf
