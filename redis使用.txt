---------------------------------------------------
1.redis数据类型：
	--Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。
	-------------
	string是redis最基本的类型，你可以理解成与Memcached一模一样的类型，一个key对应一个value。
	string类型是二进制安全的。意思是redis的string可以包含任何数据。比如jpg图片或者序列化的对象 。
	string类型是Redis最基本的数据类型，一个键最大能存储512MB。 
---------------------------------------------------
127.0.0.1:6379> config set dir "H:\\redis_data"
(error) ERR Changing directory: No such file or directory
127.0.0.1:6379> config set dir "H:\\redis_data"
		---------------------------------设置本地数据库路径为:H:\\redis_data
OK
127.0.0.1:6379> config get dir
		---------------------------------获取本地数据库地址
1) "dir"
2) "H:\\redis_data"
127.0.0.1:6379> set name runoob
		---------------------------------设置String类型数据（key值为name，value值为runoob）
OK
127.0.0.1:6379> get name
"runoob"
127.0.0.1:6379> hmset user:1 username runoob password runoob points 200
		---------------------------------设置Hash(哈希)值
		--( hash是一个string类型的field和value的映射表，hash特别适合用于存储对象)
OK
127.0.0.1:6379> hgetall user:1
1) "username"
2) "runoob"
3) "password"
4) "runoob"
5) "points"
6) "200"
127.0.0.1:6379> lpush runoob redis
		---------------------------------List（列表）--有序集合且重复值仍添加
(integer) 1
127.0.0.1:6379> lpush runoob mongodb
(integer) 2
127.0.0.1:6379> lpush runnoob rabitmq
(integer) 1
127.0.0.1:6379> lrange runoob 0 10
1) "mongodb"
2) "redis"
127.0.0.1:6379>  sadd runoob redis
(error) WRONGTYPE Operation against a key holding the wrong kind of value
127.0.0.1:6379> sadd runoobb redis
		---------------------------------Set是string类型的无序集合。添加成功返回1，相同值不添加
(integer) 1
127.0.0.1:6379> sadd runoobb mongodb
(integer) 1
127.0.0.1:6379> sadd runoobb rabitmq
(integer) 1
127.0.0.1:6379> sadd runoobb rabitmq
(integer) 0
127.0.0.1:6379> smember runnoob
(error) ERR unknown command 'smember'
127.0.0.1:6379> smember runoobb
(error) ERR unknown command 'smember'
127.0.0.1:6379> smembers runnoobb
(empty list or set)
127.0.0.1:6379> smembers runoobb
1) "rabitmq"
2) "mongodb"
3) "redis"
127.0.0.1:6379> zadd runoobbb 0 redis
		---------------------------------Zset有序集合，相同值不添加
(integer) 1
127.0.0.1:6379> zadd runoobbb 0 mongodb
(integer) 1
127.0.0.1:6379> zadd runoobbb 0 rabitmq
(integer) 1
127.0.0.1:6379> zadd runoobbb 0 rabitmq
(integer) 0
127.0.0.1:6379> zrangebyscore runoobbb 0 1000
1) "mongodb"
2) "rabitmq"
3) "redis"
127.0.0.1:6379>
---------------------------------------------------
1.启动redis客户端：
	--1.解压后直接打开文件：redis-cli.exe
	--2.配置好环境变量后直接输入命令：
		C:\Users\cjh>redis-cli
		127.0.0.1:6379>ping   (检测redis服务是否启动)
		pong
2.在远程服务上执行命令：
	--语法：$ redis-cli -h host -p port -a password
	--$redis-cli -h 127.0.0.1 -p 6379 -a "mypass"
3.key-value中对key的操作：
 	set  	runoobkey redis--创建键为runoobkey,值为redis
	del  	runoobkey--------删除键为runoobkey,输出1成功，0失败
	------------
	set     greeting "hello, dumping world!"
	dump 	greeting-----------序列化key所对应的value值
		"\x00\x15hello, dumping world!\x06\x00E\xa0Z\x82\xd8r\xc1\xde"
	exists 	greeting---------判断是否存在,存在返回1，不存在返回0
	expire 	greeting 60------为此key值(给定key值)设置过期时间为1分钟，过后删除此key（EXPIRE key seconds）
	expireat key timestamp--为 key 设置过期时间，参数是 UNIX 时间戳(unix timestamp)
	pexpire key milliseconds-设置 key 的过期时间以毫秒计。
	pexpireat key milliseconds-timestamp设置 key 过期时间的时间戳(unix timestamp) 以毫秒计
	keys 	pattern-------------查找所有符合给定模式( pattern)的 key 。
	move 	key db-------------将当前数据库的 key 移动到给定的数据库 db 当中。
	persist key-------------移除 key 的过期时间，key 将持久保持。
	pttl 	key----------------以毫秒为单位返回 key 的剩余的过期时间。
	ttl 	key-----------------以秒为单位，返回给定 key 的剩余生存时间(TTL, time to live)。
	randomkey---------------从当前数据库中随机返回一个 key 。
	rename 	key newkey-------修改 key 的名称
	renamenx key newkey-----仅当newkey不存在时，将 key 改名为 newkey 。
	type 	key----------------返回 key 所储存的值的类型。
4.字符串类操作：
	set 	 mykey "This is my test key"
	get 	 mykey 
	getrange mykey 0 3 （从下标为0到下标为3，共四个数|若为0 -1，则为全部值）
	-----
	GETSET db mongodb   （为db重新赋值为mongodb，若其有原来值则返回，没有则返回nil）
	(nil) # 没有旧值，返回 nil
	GET db
	"mongodb"
	GETSET db redis      # 返回旧值 mongodb
	"mongodb"
	GET db
	"redis"
	-----



——————————————————————————————————————————————————————————
查看redis版本:进入redis解压目录执行
$ redis-server --version

redis的启动方式
1.直接启动
  进入redis根目录，执行命令:
  #加上‘&’号使redis以后台程序方式运行
1
	
./redis-server &

 2.通过指定配置文件启动
  可以为redis服务启动指定配置文件，例如配置为/etc/redis/6379.conf
  进入redis根目录，输入命令：
1
1、Redis直接启动：

$  redis-server

默认端口6379
$ redis-server --port 6380	
./redis-server /etc/redis/6379.conf

  #如果更改了端口，使用`redis-cli`客户端连接时，也需要指定端口，例如：
1
	
redis-cli -p 6380

3.使用redis启动脚本设置开机自启动
  启动脚本 redis_init_script 位于位于Redis的 /utils/ 目录下，redis_init_script脚本代码如下：
	
#!/bin/sh
#
# Simple Redis init.d script conceived to work on Linux systems
# as it does use of the /proc filesystem.
 
#redis服务器监听的端口
REDISPORT=6379
 
#服务端所处位置
EXEC=/usr/local/bin/redis-server
 
#客户端位置
CLIEXEC=/usr/local/bin/redis-cli
 
#redis的PID文件位置，需要修改
PIDFILE=/var/run/redis_${REDISPORT}.pid
 
#redis的配置文件位置，需将${REDISPORT}修改为文件名
CONF="/etc/redis/${REDISPORT}.conf"
 
case "$1" in
    start)
        if [ -f $PIDFILE ]
        then
                echo "$PIDFILE exists, process is already running or crashed"
        else
                echo "Starting Redis server..."
                $EXEC $CONF
        fi
        ;;
    stop)
        if [ ! -f $PIDFILE ]
        then
                echo "$PIDFILE does not exist, process is not running"
        else
                PID=$(cat $PIDFILE)
                echo "Stopping ..."
                $CLIEXEC -p $REDISPORT shutdown
                while [ -x /proc/${PID} ]
                do
                    echo "Waiting for Redis to shutdown ..."
                    sleep 1
                done
                echo "Redis stopped"
        fi
        ;;
    *)
        echo "Please use start or stop as first argument"
        ;;
esac

 根据启动脚本，将修改好的配置文件复制到指定目录下，用root用户进行操作：
1
2
	
mkdir /etc/redis
cp redis.conf /etc/redis/6379.conf

 将启动脚本复制到/etc/init.d目录下，本例将启动脚本命名为redisd（通常都以d结尾表示是后台自启动服务）。
1
	
cp redis_init_script /etc/init.d/redisd

设置为开机自启动，直接配置开启自启动 chkconfig redisd on 发现错误： service redisd does not support chkconfig

解决办法，在启动脚本开头添加如下注释来修改运行级别：
1
2
	
#!/bin/sh
# chkconfig:   2345 90 10

 再设置即可
1
2
3
4
5
6
	
#设置为开机自启动服务器
chkconfig redisd on
#打开服务
service redisd start
#关闭服务
service redisd stop















































